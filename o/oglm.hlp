{smcl}
{* Last revised June 3, 2009}{...}
{cmd:help oglm}{right: ({browse "http://www.stata-journal.com/article.html?article=st0208":SJ10-4: st0208})}
{hline}

{title:Title}

{p2colset 5 13 15 2}{...}
{p2col :{hi:oglm} {hline 2}}Ordinal generalized linear models{p_end}
{p2colreset}{...}


{title:Syntax}

{p 8 12 2}
	{cmdab:oglm} {it:depvar} [{it:indepvars}]
	{ifin} {weight}
	[{cmd:,} 
	{cmdab:li:nk(}{cmdab:l:ogit}|{cmdab:p:robit}|{cmdab:c:loglog}|{cmd:{ul:l}og{ul:l}og}|{cmdab:ca:uchit}{cmd:)}
	{cmdab:het:ero(}{it:varlist}{cmd:)} {opt scale(varlist)} {opt eq2(varlist)}
	{cmd:flip}
	{opt hc} {opt ls}
	{cmd:force}
	{cmdab:lrf:orce} 
	{cmdab:sto:re(}{it:name}{cmd:)} 
	{cmdab:log}
	{opt or} {opt rrr} {cmdab:ef:orm} {opt irr} {opt hr}
	{cmdab:c:onstraints:(}{it:clist}{cmd:)} 
	{cmdab:r:obust}
	{cmdab:cl:uster:(}{it:varname}{cmd:)}
	{cmdab:l:evel:(}{it:#}{cmd:)} 
	{it:maximize_options}]

{p 4 4 2}
{cmd:oglm} shares the features of all estimation commands; see {helpb estcom}.
{cmd:oglm} typed without arguments redisplays previous results.  The following
options may be given when redisplaying results:

{p 8 8 2}
	{cmd:store(}{it:name}{cmd:)}
	{cmd:or} {opt irr} {opt rrr} {opt hr} {opt eform} 
	{cmd:level(}{it:#}{cmd:)}

{p 4 4 2}
{opt by}, {opt svy}, {opt nestreg}, {opt stepwise}, {opt xi}, and possibly
other prefix commands are allowed; see {help prefix}.

{p 4 4 2} {cmd:pweight}s, {cmd:fweight}s, and {cmd:iweight}s are
allowed; see {help weight}.


{title:Syntax for predict}

{p 8 16 2}
{cmd:predict}
{dtype}
{it:{help newvar:newvars}}
{ifin}
[{cmd:,} {it:statistic}
{opt o:utcome(outcome)}]

{p 8 16 2}
{cmd:predict}
{dtype}
{c -(}{it:stub*}{c |}{it:newvar_reg}
{it:newvar_k1}
... {it:newvar_kk-1}{c )-}
{ifin}
{cmd:,}
{opt sc:ores}

{pstd}
where {it:k} is the number of outcomes in the model.

{synoptset 11 tabbed}{...}
{synopthdr :statistic}
{synoptline}
{syntab :Main}
{synopt :{opt p:r}}predicted probabilities; the default{p_end}
{synopt :{opt xb}}linear prediction{p_end}
{synopt :{opt s:igma}}the standard deviation{p_end}
{synopt :{opt stdp}}standard error of the linear prediction{p_end}
{synoptline}
{p2colreset}{...}
{p 4 6 2}
With the {opt pr} option, you specify  one or {it:k} new variables
depending on whether the {opt outcome()} option is also specified, where
{it:k} is the number of categories of {depvar}.  With {opt xb} and {opt stdp},
one new variable is specified.{p_end}

{p 4 4 2}
These statistics are available both in and out of sample; type
"{cmd:predict} {it:...} {cmd:if e(sample)} {it:...}" if wanted only for the
estimation sample.


{title:Description}

{p 4 4 2}{cmd:oglm} fits ordinal generalized linear models.  When these
models include equations for heteroskedasticity, they are also known as
heterogeneous choice models or location-scale models or heteroskedastic
ordinal regression models.  {cmd:oglm} supports multiple link functions,
including logit (the default), probit, complementary log-log, log-log, and
cauchit.

{p 4 4 2}When an ordinal regression model incorrectly assumes that error
variances are the same for all cases, the standard errors are wrong and
(unlike ordinary least squares regression) the parameter estimates are biased.
Heterogeneous choice models and location-scale models explicitly specify the
determinants of heteroskedasticity in an attempt to correct for it.  Further,
these models can be used when the variance or variability of underlying
attitudes is itself of substantive interest.  Alvarez and Brehm (1995), for
example, argued that individuals whose core values are in conflict will have a
harder time making a decision about abortion and will hence have greater
variability or error variances in their responses.

{p 4 4 2}Several special cases of ordinal generalized linear models can also be
fitted by {cmd:oglm}, including the parallel lines models of
{cmd:ologit} and {cmd:oprobit} (where error variances are assumed to
be homoskedastic), the heteroskedastic probit model of {cmd:hetprob}
(where the dependent variable must be a dichotomy and the only link
allowed is probit), the binomial generalized linear models of
{cmd:logit}, {cmd:probit}, and {cmd:cloglog} (which also assume
homoskedasticity), as well as similar models that are not otherwise
fitted by Stata.  This makes {cmd:oglm} particularly useful for
testing whether constraints on a model (for example, homoskedastic errors) are
justified or for determining whether one link function is more
appropriate for the data than are others.

{p 4 4 2}Other features of {cmd:oglm} include support for linear constraints,
which makes it possible, for example, to impose and test the constraint that
the effects of x1 and x2 are equal.  {cmd:oglm} works with several prefix
commands, including {cmd:by}, {cmd:nestreg}, {cmd:xi}, {cmd:svy}, and
{cmd:stepwise}.  Its {cmd:predict} command includes the ability to compute
estimated probabilities.  The actual values taken on by the dependent variable
are irrelevant except that larger values are assumed to correspond to "higher"
outcomes.  As many as 20 outcomes are allowed.  {cmd:oglm} was inspired by the
SPSS PLUM routine but differs somewhat in its terminology, labeling of links,
and the variables that are allowed when modeling heteroskedasticity.


{title:Options}

{p 4 8 2}
{cmd:link(}{cmd:logit}|{cmd:probit}|{cmd:cloglog}|{cmd:loglog}|{cmd:cauchit}{cmd:)}
specifies the link function to be used.  The legal values are
{cmd:link(logit)}, {cmd:link(probit)}, {cmd:link(cloglog)},
{cmd:link(loglog)}, and {cmd:link(cauchit)}.  The default is {cmd:link(logit)}.

{p 8 8 2} Note: {cmd:link(log)} is also available but is considered
experimental (and possibly wrong) at this point.  Stata's {cmd:glm} program
successfully uses the log link with dichotomous dependent variables, but how
and how well it generalizes to the ordinal case is not clear.

{p 8 8 2} The following advice is excerpted from Norusis (2005, 84):  "Probit
and logit models are reasonable choices when the changes in the cumulative
probabilities are gradual.  If there are abrupt changes, other link functions
should be used.  The complementary log-log link may be a good model when the
cumulative probabilities increase from 0 fairly slowly and then rapidly
approach 1.  If the opposite is true, namely that the cumulative probability
for lower scores is high and the approach to 1 is slow, the negative log-log
link may describe the data".

{p 8 8 2} Warning: Programs differ in the names used for some links.  Stata's
loglog link corresponds to SPSS PLUM's cloglog link, and Stata's cloglog link
is called nloglog in SPSS.

{p 4 8 2} {opt hetero(varlist)}, {opt scale(varlist)}, and {opt eq2(varlist)}
are synonyms (use only one of them) and can be used to specify the
variables believed to affect heteroskedasticity in heterogeneous
choice and location-scale models.  In such models, the model chi-squared
statistic is a test of whether the choice and location parameters and the
heteroskedasticity and scale parameters differ from zero; this differs
from {cmd:hetprob}, where the model chi-squared tests only the
choice and location parameters.  The more neutral-sounding {opt eq2(varlist)}
alternative is provided because it may be less confusing when using
the {opt flip} option.

{p 8 8 2} Warning: The default Wald tests conducted by the {opt nestreg} and
{opt stepwise} prefix commands can give incorrect results when the same
variable appears in both the location and scale equations.  In such cases, it
is recommended that you use {opt nestreg}'s and {opt stepwise}'s
likelihood-ratio test options.

{p 4 8 2} {opt flip} causes the command-line placement of the location and
scale variables to be reversed; that is, what would normally be the
choice and location variables will instead be the variance and scale variables, and
vice versa.  This functionality is primarily useful if you want to use the {cmd:stepwise} or
{cmd:nestreg} prefix commands to do stepwise selection or hierarchical entry
of the heteroskedasticity and scale variables. (Just be sure to remember
which set of variables is which.) If you do this, use the likelihood-ratio
test options of {cmd:nestreg} or {cmd:stepwise}, because the default Wald
tests may be wrong otherwise.

{p 4 8 2} {opt hc} and {opt ls} affect how the equations are labeled.  If 
{opt hc} is used, then, to be consistent with the literature on heterogeneous
choice, the equations are labeled "choice" and "variance".  If {opt ls} is
used, the equations are labeled "location" and "scale", which is consistent
with SPSS PLUM and other published literature.  If neither option is
specified, then the scale or heteroskedasticity equation is labeled "lnsigma",
which is consistent with other Stata programs such as {cmd:hetprob}.

{p 4 8 2} {opt force} can be used to force {cmd:oglm} to issue only warning
messages in some situations when it would normally give a fatal error message.
By default, the dependent variable can have a maximum of 20 categories.  A
variable with more categories than that is probably a mistaken entry by the
user -- for example, if a continuous variable has been specified rather than
an ordinal one.  However, if your dependent variable really is ordinal with
more than 20 categories, {opt force} will let {cmd:oglm} analyze it (although
other practical limitations, such as small sample sizes within categories, may
prevent it from generating a final solution.)  Obviously, you should use
{cmd:force} only when you are confident that you are not making a mistake.
{cmd:trustme} can be used as a synonym for {opt force}.

{p 4 8 2} {cmd:lrforce} forces Stata to report a likelihood-ratio statistic
under certain conditions when it ordinarily would not.  Some types of
constraints can make a likelihood-ratio chi-squared test invalid.  Hence, to be
safe, Stata reports a Wald statistic whenever constraints are used.  For
many common sorts of constraints (for example, constraining the effects of two
variables to be equal) a likelihood-ratio chi-squared statistic is probably
appropriate.  The {cmd:lrforce} option will be ignored when robust
standard errors are specified either directly or indirectly (for example, via
use of the {cmd:robust} or {cmd:svy} options).  Use this option with caution.

{p 4 8 2} {cmd:store(}{it:name}{cmd:)} causes the command
{cmd:estimates store {it:name}} to be executed when {cmd:oglm}
finishes.  This is useful for when you wish to fit a series of
models and want to save the results.  See {helpb estimates}.

{p 8 8 2} Warning: The {opt store()} option may not work correctly when
the {opt svy} prefix is used.

{p 4 8 2} {cmd:log} displays the iteration log.  By default, it is suppressed.

{p 4 8 2} {cmd:or} reports the fitted coefficients transformed to relative
odds ratios -- that is, exp(b) rather than b; see {hi:[R] ologit} for a
description of this concept.  Options {cmd:rrr}, {cmd:eform}, {cmd:irr} and
{opt hr} produce identical results (that are labeled differently) and can also
be used.  It is up to the user to decide whether the exp(b) transformation
makes sense given the link function used.  For example, it probably does not
make sense when using the probit link.

{p 4 8 2} {cmd:constraints(}{it:clist}{cmd:)} specifies the linear constraints
to be applied during estimation.  The default is to perform unconstrained
estimation.  Constraints are defined with the {helpb constraint} command.
{cmd:constraints(1)} specifies that the model is to be constrained according
to constraint 1; {cmd:constraints(1-4)} specifies constraints 1 through 4; and
{cmd:constraints(1-4,8)} specifies constraints 1 through 4 and 8.

{p 4 8 2} {cmd:robust} specifies that the Huber/White/sandwich
estimator of variance is to be used in place of the traditional
calculation.  If you specify {cmd:pweight}s, {cmd:robust} is implied.

{p 4 8 2} {cmd:cluster(}{it:varname}{cmd:)} specifies that the observations
are independent across groups (clusters) but not necessarily within groups.
{it:varname} specifies the group to which each observation belongs; for
example, {cmd:cluster(personid)} would specify data with repeated observations
on individuals.  {cmd:cluster()} affects the estimated standard errors and
variance-covariance matrix of the estimators, but not the estimated
coefficients.  {cmd:cluster()} can be used with {cmd:pweight}s to produce
estimates for unstratified cluster-sampled data.

{p 4 8 2} {cmd:level(}{it:#}{cmd:)} specifies the confidence level, as a
percentage, for confidence intervals.  The default is {cmd:level(95)} or as
set by {helpb set level}.

{p 4 8 2} {it:maximize_options} control the maximization process; see
{helpb maximize}.  You should never have to specify most of these.
However, the {opt difficult} option can sometimes be useful with models
that are running very slowly or not converging.


{title:Options for predict}

{phang}
{opt pr}, the default, calculates the predicted probabilities.
If you do not also specify the {opt outcome()} option, you must specify
{it:k} new variables, where {it:k} is the number of categories of the
dependent variable.  Say that you fitted a model by typing
{cmd:oglm result x1 x2}, and {opt result} takes on three values.
Then you could type {cmd:predict p1 p2 p3} to obtain all three predicted
probabilities.  If you specify the {opt outcome()} option, you must specify
one new variable.  Say that {opt result} takes on the values 1, 2, and 3.
Typing {cmd:predict p1, outcome(1)} would produce the same {opt p1}.

{phang}
{opt xb} calculates the linear prediction.  You specify one new
variable, for example, {cmd:predict linear, xb}.  The linear prediction is
defined, while the contribution of the estimated cutpoints is ignored.

{phang}
{opt sigma} calculates the standard deviation, also known as the scale.  You
specify one new variable, for example, {cmd:predict sigma, s}.  If the model
does not include an equation for heteroskedasticity, then the predicted sigma
value is missing for all cases.

{phang}
{opt stdp} calculates the standard error of the linear prediction.  You
specify one new variable, for example, {cmd:predict se, stdp}.

{phang}
{opt outcome(outcome)} specifies for which outcome the predicted probabilities
are to be calculated.  {opt outcome()} should contain either a single value of
the dependent variable or one of {opt #1}, {opt #2}, {it:...}, with {opt #1}
meaning the first category of the dependent variable, {opt #2} meaning the
second category, etc.

{phang}
{opt scores} calculates equation-level score variables.


{title:Examples}

{p 4 4 2}Example 1.  Basic models.  By default, {cmd:oglm} will fit the
same models as {cmd:ologit}.  The {cmd:store()} option is convenient for saving
results if you want to contrast different models.

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta}{p_end}
{p 8 12 2}{cmd:. oglm  warm yr89 male white age ed prst}{p_end}
{p 8 12 2}{cmd:. oglm  warm yr89 male white age ed prst, store(m1)}{p_end}
{p 8 12 2}{cmd:. oglm  warm yr89 male white age ed prst, robust}{p_end}

{p 4 4 2}Example 2.  Survey data estimation.

{p 8 12 2}{cmd:. use http://www.stata-press.com/data/r8/nhanes2f.dta}{p_end}
{p 8 12 2}{cmd:. svy: oglm health female black age age2}{p_end}
{p 8 12 2}{cmd:. svy, subpop(female): oglm health black age age2}{p_end}

{p 4 4 2}Example 3.  The {cmd:predict} command.

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta}{p_end}
{p 8 12 2}{cmd:. quietly oglm  warm yr89 male white age ed prst}{p_end}
{p 8 12 2}{cmd:. predict p1 p2 p3 p4}{p_end}

{p 4 4 2}Example 4.  Constrained logistic regression.  {cmd:logit},
{cmd:ologit}, {cmd:probit}, and {cmd:oprobit} provide other, generally
faster means for fitting nonheteroskedastic models with logit and probit
links; but none of these commands currently support the use of linear
constraints, such as two variables that have equal effects.  {cmd:oglm} can be
used for this purpose.  For example,

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta, clear}{p_end}
{p 8 12 2}{cmd:. recode warm (1 2  = 0)(3 4 = 1), generate(agree)}{p_end}
{p 8 12 2}{cmd:. * Constrain the effects of male and white to be equal}{p_end}
{p 8 12 2}{cmd:. constraint 1 male = white}{p_end}
{p 8 12 2}{cmd:. oglm agree yr89 male white age ed prst, lrforce store(constrained) constraint(1)}{p_end}
{p 8 12 2}{cmd:. oglm agree yr89 male white age ed prst, store(unconstrained) }{p_end}
{p 8 12 2}{cmd:. lrtest constrained unconstrained}{p_end}

{p 4 4 2} Example 5.  Other link functions.  By default, {cmd:oglm} uses the
logit link.  If you prefer, however, you can specify probit, complementary
log-log, log-log, or log links.  In the following example, the same model is
fitted using each of the links supported by {cmd:oglm}.  Note: 
{opt link(log)} is considered experimental and is possibly wrong.

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta, clear}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(logit)}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(probit)}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(cloglog)}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(loglog)}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(cauchit)}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, link(log)}{p_end}

{p 4 4 2}Example 6.  Prefix commands.  {cmd:oglm} supports many of
Stata 9's prefix commands.  For example,

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta}{p_end}
{p 8 12 2}{cmd:. stepwise, pe(.05): oglm warm yr89 male}{p_end}
{p 8 12 2}{cmd:. xi: oglm warm yr89 i.male}{p_end}
{p 8 12 2}{cmd:. nestreg: oglm warm (yr89 male  white age) (ed prst)}{p_end}

{p 4 4 2}Example 7.  heteroskedasticity, scale, eq2 options.  The {opt hetero()},
{cmd:scale()}, and {cmd:eq2()} options are synonyms; use whichever one you
prefer.  {opt ls} and {opt hc} are optional and affect whether the equations
are labeled consistently with the heterogeneous choice or location-scale
literature.  If you are also using the {opt stepwise} or {opt nestreg} prefix
commands, you should use their likelihood-ratio test options because the
default Wald tests can be wrong when the same variable appears in both the
location and scale equations.  It is possible to fit a
heteroskedasticity-only model, and the variables in the two equations do not
need to be the same.

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, hetero(yr89) hc}{p_end}
{p 8 12 2}{cmd:. oglm warm yr89 male white age ed prst, scale(male white) ls link(probit)}{p_end}
{p 8 12 2}{cmd:. oglm warm, eq2(male)}{p_end}
{p 8 12 2}{cmd:. stepwise, pe(.05) lr: oglm warm yr89 male white age ed prst, hetero(yr89 male white) }{p_end}
{p 8 12 2}{cmd:. nestreg, lr: oglm warm yr89 male white age ed prst, hetero(yr89 male white)}{p_end}

{p 4 4 2}Example 8.  The {cmd:flip} option.  In the last two examples, we did
stepwise selection and hierarchical entry of the choice and location
variables.  Suppose we wanted to do stepwise selection or hierarchical entry
of the heteroskedasticity and scale variables instead.  We can use the
{cmd:flip} option, which causes the command-line placement of the location and
scale variables to be reversed.  Just make sure you specify each variable list
correctly -- while the {cmd:hetero()}, {cmd:scale()}, and {cmd:eq2()} options
are all synonyms, you may find it less confusing if you use {cmd:eq2()} with
{opt flip}.  Also remember to use the likelihood-ratio test options with
{cmd:nestreg} or {opt stepwise}.  In the following examples, because of the
{cmd:flip} option, the choice variables are {cmd:yr89}, {cmd:male},
{cmd:white}, {cmd:age}, {cmd:ed}, and {cmd:prst}, while the hetero variables
are {cmd:yr89}, {cmd:male}, and {cmd:white}.

{p 8 12 2}{cmd:. use http://www.indiana.edu/~jslsoc/stata/spex_data/ordwarm2.dta}{p_end}
{p 8 12 2}{cmd:. stepwise, pe(.05) lr: oglm warm yr89 male white, eq2(yr89 male white age ed prst) flip}{p_end}
{p 8 12 2}{cmd:. nestreg, lr: oglm warm yr89 male white, eq2(yr89 male white age ed prst) flip}{p_end}


{title:Author}

{pstd}
Richard Williams{break}
Notre Dame Department of Sociology{break}
Richard.A.Williams.5@ND.Edu{break}
{browse "http://www.nd.edu/~rwilliam/oglm/"}{p_end}


{title:Acknowledgments}

{pstd}The documentation and source code for several Stata commands (for
example, {cmd:ologit_p}) were major aids in developing the {cmd:oglm}
documentation and in adding support for the {cmd:predict} command.  Much of
the code is adapted from
{it:Maximum Likelihood Estimation with Stata, Third Edition}, by William
Gould, Jeffrey Pitblado, and William Sribney.  SPSS's PLUM routine helped to
inspire {opt oglm} and provided a means for double checking the accuracy of
the program.

{pstd} Joseph Hilbe, Mike Lacy, and Rory Wolfe provided stimulating and
helpful comments.  Jeff Pitblado helped me with several programming issues.


{title:References}

{phang}Alvarez, R. M., and J. Brehm. 1995.  American ambivalence towards
abortion policy: Development of a heteroskedastic probit model of competing
values. {it:American Journal of Political Science} 39: 1055-82.

{phang}Norusis, M. 2005.  {it:SPSS 13.0 Advanced Statistical Procedures Companion}.  Upper Saddle River, NJ: Prentice Hall. See esp. chap. 4, Ordinal
Regression. {browse "http://www.norusis.com/pdf/ASPC_v13.pdf"}{p_end}


{title:Suggested citations if using {cmd:oglm} in published work }

{pstd}{cmd:oglm} is not an official Stata command.  It is a free
contribution to the research community, like a paper.  Please cite it
as such.

{phang}Williams, R.  2009. Using heterogeneous choice models to 
compare logit and probit coefficients across groups.
{it:Sociological Methods & Research} 37: 531-559. A prepublication version
is available at {break} 
{browse "http://www.nd.edu/~rwilliam/oglm/RW_Hetero_Choice.pdf"}.

{phang}Williams, R.  2008. Estimating heterogeneous choice 
models with Stata.  Working paper. 
{browse "http://www.nd.edu/~rwilliam/oglm/oglm_Stata.pdf"}.

{phang}Williams, R.  2006. 
{browse "http://www.stata-journal.com/article.html?article=st0097":Generalized ordered logit/partial proportional odds models for ordinal dependent variables}.
{it:Stata Journal} 6: 58-82. 

{phang}Williams, R.  2010. {browse "http://www.stata-journal.com/article.html?article=st0208":Fitting heterogeneous choice models with oglm}.
{it:Stata Journal} 10: 540-567.

{pstd} {cmd:gologit2} is a related program and may be more appropriate
than {cmd:oglm} for some purposes.  The two programs can also be used
together if you wish to contrast heterogeneous choice or location-scale models
with gologit models.

{pstd}I would appreciate an email notification if you use {cmd:oglm} in
published work, as well as a citation of one or more of the sources listed
above.  Also feel free to email me if you have comments about the program or
its documentation.


{title:Also see}

{p 4 14 2}Article:  {it:Stata Journal}, volume 10, number 4: {browse "http://www.stata-journal.com/article.html?article=st0208":st0208}

{p 4 14 2}{space 3}Help:  {manhelp estcom U:20 Estimation and postestimation commands}, {manhelp postest U:20 Estimation and postestimation commands}, 
{manhelp constraint R}, {manhelp ologit R}, {manhelp oprobit R}, 
{manhelp hetprob R}, {manhelp svy SVY}, {manhelp prefix U:11.1.10 Prefix commands}, {helpb gologit2} (if
installed){p_end}
