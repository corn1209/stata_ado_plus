{smcl}
{* *! version september 2007}{...}
{cmd:help rencode}, ({cmd:help rdecode}), ({cmd:help rencodeall}), ({cmd:help rdecodeall})
{hline}

{title:Title}

{p2colset 5 16 18 2}{...}
{p2col :{hi:rencode} {hline 2}}Encode string(s) into numeric(s) with option to replace, and vice versa{p_end}
{p2colreset}{...}


{title:Syntax}

{phang}
String variable to numeric variable

{p 8 16 2}
{opt rencode} {it:varname} {ifin} {cmd:,} [{opth g:enerate(newvar)}
{opt l:abel}{cmd:(}{it:name}{cmd:)} {opt noe:xtend} {opt replace}]

{phang}
Numeric labelled variable to string variable

{p 8 16 2}
{opt rdecode} {it:varname} {ifin} {cmd:,} [{opth g:enerate(newvar)}
{opt maxl:ength}{cmd:(}{it:#}{cmd:)} {opt replace}]

{phang}
Multiple string variables to numeric variables

{p 8 16 2}
{opt rencodeall} [{it:varlist}] {ifin} {cmd:,} [{opt l:abel}{cmd:(}{it:name}{cmd:)} {opt noe:xtend} {opt noextenda:ll}]

{phang}
Multiple numeric labelled variables to string variables

{p 8 16 2}
{opt rdecodeall} [{it:varlist}] {ifin} {cmd:,} [{opt maxl:ength}{cmd:(}{it:#}{cmd:)} {opt ren:codecommands}{cmd:(}{it:filename}{cmd:)} {opt replace}]


{title:Description}

{pstd}
{cmd:rencode} is identical to {helpb encode}, but with the option to replace an
existing variable instead of generating a new variable.

{pstd}
{cmd:rdecode} is identical to {helpb decode}, but with the option to replace an
existing variable instead of generating a new variable.

{pstd}
There is one further difference from Stata's {helpb encode} and {helpb decode} commands: resulting variables are always compressed to
the smallest possible format.  This contrasts with Stata's built-in commands: {helpb encode} currently always generates
long-integer format numbers, and {helpb decode} currently always generates
strings whose length is determined by the maximum label length.  Hence Stata's 
built-in commands generate data types that use memory inefficiently, while the
commands documented here use memory efficiently. 

{pstd}
{cmd:rencodeall} and {cmd:rdecodeall} operate on entire lists of variables, or on all
variables if no list is given, and encode or decode all possible variables in the
list.  Variables that cannot be encoded or decoded are ignored.  The newly-created
variables replace the original variables.  Thus, these commands are equivalent to
repeatedly using {cmd:rencode} or {cmd:rdecode} with their {opt replace} option.

{pstd}
When using these commands to replace existing variables, note that the {opt if}, {opt in}, 
and {opt maxlength} options can result in irreversible loss of information.
For example, replacing using {opt in 1} would result in loss of information for all
observations except the first.  Hence use these options with caution.

{pstd}
Variable labels and order are preserved when using these commands to replace existing variables.  
However, notes and characteristics are not preserved.  Also, decoding and then re-encoding 
variables causes loss of the special missing values codes .a, .b, ..., .z.


{title:Options for rencode}

{phang}
{opth generate(newvar)} specifies the name of a variable to be created.  This
is required unless the replace option is specified.

{phang}
{opt label(name)} specifies the name of the value label to be created or used
and added to if the named value label already exists.  If {opt label()} is not
specified, {cmd:rencode} uses the same name for the label as it does
for the new variable, and if a label by this name already exists then it is used.

{phang}
{opt noextend} specifies that if there are values contained in {it:varname}
that are not present in {opt label(name)}, {it:varname} not be encoded.  By
default, any values not present in {opt label(name)} will be added to that
label.

{phang}
{opt replace} if specified causes the encoded variable to replace the original
string variable, instead of generating a new variable.  This may not be
combined with the {opth generate(newvar)} option.


{title:Options for rdecode}

{phang}
{opth generate(newvar)} specifies the name of the variable to be created.  This
is required unless the replace option is specified.

{phang}
{opt maxlength(#)} specifies how many characters of the value label to retain;
{it:#} must be between 1 and 244.  The default is {cmd:maxlength(244)}.

{phang}
{opt replace} if specified causes the decoded variable to replace the original
numeric variable, instead of generating a new variable.  This may not be
combined with the {opth generate(newvar)} option.


{title:Options for rencodeall}

{phang}
{opt label(name)} specifies the name of a single value label to be created or used
and added to if the named value label already exists.  This label will apply to all
variables encoded.  If {opt label()} is not specified, {cmd:rencodeall} uses a
different label for each variable, with in each case the name of the label being the
name of the variable.  If there is a pre-existing label by this name then it is used.

{phang}
{opt noextend} specifies that if there are values contained in {it:varname}
that are not present in {opt label(name)} - or if {opt label(name)} is not specified then in any existing label that shares
the name of the variable - {it:varname} not be encoded.  If {opt label(name)} is not
specified and no pre-existing label has the same name as the variable, then the
noextend option is ignored (unless you specify the {opt noextendall} option).  By
default, any values not present in the label will be added to the
label.  If {it:varname} cannot be encoded, {cmd:rencode} will continue
trying to encode other variables (unless you specify the {opt noextendall} option), so only variables that can be fully encoded
with the relevant label end up being encoded.

{phang}
{opt noextendall} implies {opt noextend}, but indicates that all variables should be
able to be encoded using existing labels without extending them.  If they cannot be, 
the command exits with an error message.


{title:Options for rdecodeall}

{phang}
{opt maxlength(#)} specifies how many characters of the value label to retain in every decoded variable;
{it:#} must be between 1 and 244.  The default is {cmd:maxlength(244)}.

{phang}
{opt rencodecommands(filename)} requests that a do-file be saved with a series of rencode commands to restore the decoded variables 
back to labeled numbers.  Since ".do" is not added to the name, it is wise to include ".do" at the end of the filename.

{phang}
{opt replace} overwrites the existing file, if there is already a file with the name specified in the {opt rencodecommands(filename)} option.


{title:Remarks}

{pstd}
Learn to use built-in commands {helpb encode} and {helpb decode} before using these commands.

{pstd}
These programs are wrappers that use the underlying Stata commands {helpb encode} and {helpb decode}.


{title:Revision History}

{pstd}
1. Version 2 (2009) added the {opt rencodecommands(filename)} option for {cmd:rdecodeall}.


{title:Examples}

{phang}{cmd:. rencode s, replace}{p_end}
      {txt:replaces string variable s with encoded variable labeled with the same strings}

{phang}{cmd:. decode s, replace}{p_end}
      {txt:replaces labelled numeric variable s with decoded variable using the labels}

{phang}{cmd:. rencodeall}{p_end}
      {txt:replaces all string variables with encoded, labelled versions}

{phang}{cmd:. rencodeall personName1 personName2 personName3, label(personName)}{p_end}
{p 6 6 4}
      {txt:replaces string variables personName1, personName2, and personName3 with encoded versions using label personName}

{phang}{cmd:. rdecodeall}{p_end}
      {txt:replaces all numeric labelled variables with string versions}

{phang}{cmd:. rdecodeall personName1 personName2 personName3}{p_end}
{p 6 6 4}
      {txt:replaces numeric labelled variables personName1, personName2, and personName3 with string versions}

{phang}{cmd:. rdecodeall personName1 personName2 personName3, renc("my rencode file.do")}{p_end}
{p 6 6 4}
      {txt:as above, plus saves a do-file to go back to encoded versions using existing labels}


{title:Author}

{p 4}Kenneth L. Simons{p_end}
{p 4}Department of Economics {p_end}
{p 4}Rensselaer Polytechnic Institute{p_end}
{p 4}{browse "http://www.rpi.edu/~simonk"}{p_end}


{title:Also see}

{psee}
Manual:  {bf:[D] encode}

{psee}
Online:  {helpb encode}, {helpb destring}
{p_end}
