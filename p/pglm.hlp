{smcl}
{* 29aug2005}{...}
{hline}
help for {hi:pglm}, {hi:pglmpredict}{right:(SJ5-4: st0092)}
{hline}

{title:Fit power GLM model with extended estimating equations}
{title:Obtain nonlinear predictions, standard errors, etc., after estimation}

{p 8 16 2}{cmd:pglm} {it:depvar} [{it:indepvars}]
{ifin}
{weight}
[{cmd:,}
{cmdab:fam:ily(}{it:famname}{cmd:)}
{cmdab:initl:ambda(}{it:#}{cmd:)} 
{cmd:power(}{it:#}{cmd:)}
{cmd:vf(}{it:q}{cmd:)}
{cmdab:conv:ergence(}{it:#}{cmd:)}
{cmdab:cl:uster(}{it:varname}{cmd:)}
{cmdab:l:evel(}{it:#}{cmd:)}
{cmdab:iter:ation(}{it:#}{cmd:)}]

{pstd}{cmd:pglm} shares the features of all estimation commands; see
{help estcom}.

{pstd}{cmd:aweight}s, {cmd:pweight}s, {cmd:iweight}s, and {cmd:fweight}s are
allowed; see {help weight}.


{p 8 18 2}
{cmd:pgmlpredict}
[{it:type}]
{it:newvar}
{ifin}
[{cmd:,}
{it:predtype}
  {cmdab:sc:ale(}{it:#}{cmd:)}
  {cmd:se(}{it:newvar}{cmd:)}
  {cmdab:var:iance(}{it:newvar}{cmd:)}
  {cmdab:w:ald}{cmd:(}{it:newvar}{cmd:)}
  {cmd:p(}{it:newvar}{cmd:)}
  {cmd:ci}{cmd:(}{it:newvar_ll newvar_ul}{cmd:)}
  {cmdab:l:evel(}{it:#}{cmd:)}
  {cmd:g}{cmd:(}{it:stub}{cmd:)}
  {cmdab:iter:ate}{cmd:(}{it:#}{cmd:)}
  {cmd:force}]


{title:Description}

{p 4 4 2}{cmd:pglm} performs estimation of semiparametric regression in
generalized linear model with Box-Cox link function and power or quadratic
variance functions using Fisher's scoring algorithm. {cmd:pglm} always reports
robust variances.

{p 4 4 2}Note that these algorithms converge more readily if the {it:depvar}
is scaled by its mean.

{p 4 4 2}{cmd:pglmpredict} is used to obtain nonlinear predictions after
{cmd:pglm} estimation command and optionally to calculate the variance,
standard errors, Wald test statistics, significance levels, and pointwise
confidence intervals for these predictions.  Unlike {helpb testnl} and
{helpb nlcom}, the quantities generated by {cmd:pglmpredict} are designed to
vary over the observations in the data.  The standard errors and other
inference-related quantities are based on the "partial method", an
approximation appropriate in large samples.

{p 4 4 2}{cmd:pglmpredict} is based on {helpb predictnl}.


{title:Options for pglm}

{p 4 8 2}{opt family(famname)} specifies the variance function (V) of a
particular distribution.  When {cmd:family()} is specified, one of the
variance function parameters becomes fixed and is not estimated. 
{it:famname} is one of the following:

{p 8 12 2} {cmd:family(}{cmdab:pow:er}{cmd:)}: V = theta1*mu^#, where # is
     any real value specified using the {cmd:power(}{it:#}{cmd:)} option
     and mu = E(Y|X).{p_end}
{p 8 12 2} {cmd:family(}{cmdab:gau:ssian}{cmd:)}: V = theta1, corresponding to
     the Gaussian family.{p_end}
{p 8 12 2} {cmd:family(}{cmdab:poi:sson}{cmd:)}: V = theta1 * mu,
     corresponding to the Poisson family.{p_end}
{p 8 12 2} {cmd:family(}{cmdab:gam:ma}{cmd:)}: V = theta1 * mu^2,
     corresponding to the gamma family.{p_end}
{p 8 12 2} {cmd:family(}{cmdab:iga:ussian}{cmd:)}: V = theta1 * mu^3,
     corresponding to the inverse Gaussian family.{p_end}
{p 8 8 2} When {cmd:vf()} is specified, only {cmd:family(poisson)} is available.

{p 4 8 2}{cmd:initlambda(}{it:#}{cmd:)} specifies the starting value for the
link parameter.  If no value is specified, log link is used as the starting
point.

{p 4 8 2}{cmd:power(}{it:#}{cmd:)} specifies a value for the power parameter
in the variance function.  If no value is specified, this parameter is
estimated from the data.  This option should be used only when 
{cmd:family(power)} is specified and {cmd:vf(}{it:q}{cmd:)} is not specified. 

{p 4 8 2}{cmd:vf(}{it:q}{cmd:)} requests a quadratic-variance function
for the model.  If this option is not specified, the power-variance function
is used.  

{p 4 8 2} {cmd:convergence(}{it:#}{cmd:)} changes the convergence criteria. 
The default is {cmd:convergence(0.0001)}, where the estimating algorithm is
iterated until the maximum relative difference in parameter estimates between
two successive iterations is less than 0.0001.

{p 4 8 2}{cmd:cluster(}{it:varname}{cmd:)} specifies that the observations are independent across groups (clusters), but not necessarily independent within groups.  {it:varname} specifies to which group each observation belongs, e.g.,
{cmd:cluster(personid)} in data with repeated observations on individuals.

{p 4 8 2}{cmd:level(}{it:#}{cmd:)} specifies the confidence level, as a
percentage, for the confidence intervals generated by {cmd:ci()}.  The default
is {cmd:level(95)} or as set by {helpb set level}.

{p 4 8 2} {cmd:iteration(}{it:#}{cmd:)} specifies the number of iterations for
the estimation algorithm. The default is {cmd:iteration(500)}.


{title:Options for pglmpredict}

{p 4 8 2}
{it:predtype} identifies the type of prediction that the {it:newvar} should
store.  The type is one of the following:

{p 8 8 2}
{cmd:xb}, the default, calculates the linear prediction for each observation
from the fitted model.

{p 8 8 2}
{cmd:mu} calculates predicted outcome for each observation.

{p 8 8 2}
{cmd:ie({it:varname})} calculates the incremental effect for an indicator
variable via method of recycled predictions for each observation.

{p 8 8 2}
{cmd:me({it:varname})} calculates the marginal effect for a continuous
variable for each observation.

{p 4 8 2}{cmd:scale(}{it:#}{cmd:)} multiplies {it:predtype}{cmd:[i]} with the
value of the scale specified. The default is {cmd:scale(1)}.

{p 4 8 2}{cmd:se(}{it:newvar}{cmd:)} adds {it:newvar} of store type {it:type},
where for each {cmd:i} in the prediction sample, {it:newvar}{cmd:[i]} contains
the estimated standard error of {it:predtype}{cmd:[i]}.

{p 4 8 2}{cmd:variance}{cmd:(}{it:newvar}{cmd:)} adds {it:newvar}of storage
type {it:type}, where for each {cmd:i} in the prediction sample, 
{it:newvar}{cmd:[i]} contains the estimated variance of {it:predtype}{cmd:[i]}.

{p 4 8 2}{cmd:wald}{cmd:(}{it:newvar}{cmd:)} adds {it:newvar} of storage type
{it:type}, where for each {cmd:i} in the prediction sample,
{it:newvar}{cmd:[i]} contains the Wald test statistic for the test of
the hypothesis H0:{it:predtype}{cmd:[i]}=0.

{p 4 8 2}{cmd:p}{cmd:(}{it:newvar}{cmd:)} adds {it:newvar} of storage type
{it:type, where for each {cmd:i} in the prediction sample, 
{it:newvar}{cmd:[i]} contains the significance level (p-value) of
the Wald test of the hypothesis H0:{it:predtype}{cmd:[i]}=0.

{p 4 8 2}{cmd:ci(}{it:newvar_ll newvar_ul}{cmd:)} creates variables containing
the limits for 95% confidence intervals for the predicted values.  
{it:newvar_ll} contains the lower limit and {it:newvar_ul} contains the upper
limit.

{p 4 8 2}{cmd:level(}{it:#}{cmd:)} specifies the confidence level, as a
percentage, for the confidence intervals generated by {cmd:ci()}.  The default
is {cmd:level(95)} or as set by {helpb set level}.

{p 4 8 2}{cmd:g(}{it:stub}{cmd:)} specifies that new variables,
{it:stub}{cmd:1}, {it:stub}{cmd:2}, ..., {it:stub}{cmd:k} are to be created,
where {cmd:k} is the dimension of {cmd:e(b)}.  {it:stub}{cmd:1} will contain
the observation-specific derivatives of {it:predtype} with respect to the
first coefficient listed in {cmd:e(b)}, {it:stub}{cmd:2} will contain the
derivatives of {it:predtype} with respect to the second coefficient listed in
{cmd:e(b)}, etc.  If the derivative of {it:predtype} with respect to a
particular coefficient in {cmd:e(b)} equals zero for all observations in the
prediction sample, the {it:stub} variable for that coefficient is not created.

{p 4 8 2}{cmd:iterate(}{it:#}{cmd:)} specifies the maximum number of
iterations used to find the optimal step size in the calculation of the
numerical derivatives of {it:predtype} with respect to estimated model
coefficients.  By default, the maximum number of iterations is 100, but
convergence is usually achieved after only a few iterations.  You should
rarely have to use this option.

{p 4 8 2}{cmd:force} forces the calculation of standard errors and other
inference-related quantities in situations where {cmd:pglmpredict} would
otherwise refuse to do so.  The calculation of standard errors takes place by
evaluating the numerical derivative of {it:predtype} with respect to the
coefficient vector {cmd:e(b)}.  If {cmd:pglmpredict} detects that {it:predtype}
is possibly a function of random quantities other than {cmd:e(b)}, it will
refuse to calculate standard errors, Wald tests, p-values, etc.  In such
cases, the {cmd:force} option forces the calculation to take place anyway.  If
you use the {cmd:force} option, there is no guarantee that any inference
quantities (e.g., standard errors) will be correct or that the values can be
interpreted.


{title:Examples}

{p 8 12 2}{cmd:. summarize pearnval, meanonly}{p_end}
{p 8 12 2}{cmd:. global  scale=r(mean)}{p_end}
{p 8 12 2}{cmd:. generate y=pearnval/$scale}{p_end}
{p 8 12 2}{cmd:. pglm y hischool somcoll college hiedu age }{p_end}
{p 8 12 2}{cmd:. pglm y hischool somcoll college hiedu age [pw=marsupwt]}{p_end}
{p 8 12 2}{cmd:. pglm y hischool somcoll college hiedu age [pw=marsupwt], iter(1000) conv(0.001) vf(q)}{p_end}
{p 8 12 2}{cmd:. pglm y hischool somcoll college hiedu age [pw=marsupwt], family(gamma)}{p_end}
{p 8 12 2}{cmd:. pglm y hischool somcoll college hiedu age black other female married nvmarried [pw=marsupwt], family(pow) power(2.5)}{p_end}
{p 8 12 2}{cmd:. predictnl y_hat, mu se(semu) scale($sc)}{p_end}
{p 8 12 2}{cmd:. predictnl iefem, ie(female) se(seie) scale($sc)}{p_end}
{p 8 12 2}{cmd:. predictnl meage, me(age) se(seme) scale($sc)}{p_end}


{title:Author}

{p 4 4 2}
{browse "http:home.uchicago.edu/~abasu":A. Basu}, Section of General Internal Medicine, Department of Medicine
University of Chicago, Chicago, Illinois, USA.  
Email {browse "mailto:abasu@medicine.bsd.uchicago.edu":abasu@medicine.bsd.uchicago.edu} if you observe any problems.


{title:Reference}

{p 4 8 2}
Basu A, Rathouz P. 2005. Estimating marginal and incremental effects on health
outcomes using flexible link and variance function models. {it: Biostatistics}
6(1): 93-109.


{title:Also see}

{p 4 13 2}
Online:  {helpb glm}, {helpb predictnl}
{p_end}
