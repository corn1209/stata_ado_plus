{smcl}
{* 27nov2007}{...}
{cmd:help tsrtest}{right: ({browse "http://www.stata-journal.com/article.html?article=st0158":SJ9-1: st0158})}
{hline}


{title:Title}

{p2colset 5 16 18 2}{...}
{p2col :{hi:tsrtest} {hline 2}}General two-sample randomization test{p_end}
{p2colreset}{...}


{title:Syntax}

{p 8 15 2}
{cmd:tsrtest}
 {it:groupvar} 
 {it:expr} 
 {ifin} 
 [{helpb using} {it:filename}]
 [{cmd:,} {it:options}] 
 {cmd::} {it:command}

{synoptset 17}
{synopthdr}
{synoptline}
{synopt:{opt quiet}}suppress information about hypotheses and results{p_end}
{synopt:{opt nodots}}suppress the display of dots{p_end}
{synopt:{opt nodrop}}do not drop observations excluded by {cmd:if} or {cmd:in}{p_end}
{synopt:{opt reps(#)}}perform {it:#} random group recombinations if simulating; default is {cmd:reps(10000)} {p_end}
{synopt:{opt simsec(#)}}allow exact test to take a maximum of {it:#} seconds or else revert to Monte Carlo simulation; default is {cmd:simsec(1000)}{p_end}
{synopt:{opt nullvalue(#)}}assume real number {it:#} to be null value when calculating two-tailed p-levels; default is {cmd:nullvalue(0.0)}{p_end}
{synopt:{opt exact}}force calculation of exact p-values{p_end}
{synopt:{opt ov:erwrite}}overwrite log file{p_end}
{synoptline}


{title:Arguments}

{pstd}The syntax is similar to that of {helpb permute}. In fact, one could use 
{cmd:permute} to approximate the results of this exact test, but with
{cmd:tsrtest}, one would obtain a true exact test based on a complete
enumeration of all possible arrangements.

{pstd}{it:groupvar} is the grouping variable, which can be any dichotomous
variable. In the process of calculating p-levels, this variable is reassigned
but is restored when the program terminates. {it:expr} specifies the test
statistic, e.g., {cmd:r(mean)} (also see {helpb return:saved results}), which
is generated by the command specified after the colon. It is possible to limit
the observations included with {cmd:if} or {cmd:in}.

{pstd}Additionally, one has the possibility of generating a {cmd:.dta} file
that contains in its first line the observed value of the test statistic and in
its subsequent lines all values of the test statistics from the computed
combinations; this can be achieved by specifying {helpb using} {it:filename}.

{pstd} This program must {it:not} use {helpb _variables:_n} because
the running number is modified by the test program.


{title:Description}

{pstd} {cmd:tsrtest} performs two-sample randomization tests for arbitrary
test statistics.  It computes all possible assignments of the data (e.g.,
unmatched data) to two groups by using the algorithm by Gentleman (1975) and
calculates a test statistic by using a user-specified command.  Then the
fraction of group assignments is computed whose test statistic is greater
than, less than, or equal to the observed test statistic. On this base,
p-levels are computed.

{pstd}Because the process of computing all group combinations can be time
consuming even for moderate sample sizes, an estimate for the time required is
computed based on 200 calls to the user-specified command.  If the time
required exceeds a certain limit, {cmd:tsrtest} reverts to generating 10,000
random group combinations (with the possibility of repetition) to approximate
p-levels.


{title:Options}

{phang} {cmd:quiet} suppresses information about hypotheses and results.

{phang}
{cmd:nodots} suppresses the display of dots as progress indicator.

{phang} {cmd:nodrop} specifies to not drop the observations excluded by
{cmd:if} or {cmd:in}.  By default, every observation not included by {cmd:if} or
{cmd:in} gets (temporarily) dropped.

{phang} {cmd:reps(}{it:#}{cmd:)} stipulates that {it:#} random group
assignments be performed if simulating. The default is
{cmd:reps(10000)}.

{phang} {cmd:simsec(}{it:#}{cmd:)} stipulates that an exact test be used if
its estimated execution time would not exceed {it:#} seconds. If the estimated
execution time exceeds {it:#} seconds, {cmd:tsrtest} will revert to Monte
Carlo simulation. The default is {cmd:simsec(1000)}.

{phang} {cmd:nullvalue(}{it:#}{cmd:)} specifies that the null value of the
test statistic is the real number {it:#}. The default is {cmd:nullvalue(0.0)}.

{phang} {cmd:exact} forces the calculation of exact p-levels, even if the
estimated execution time would exceed the time specified in
{cmd:simsec(}{cmd:)}.

{phang} {cmd:overwrite} specifies to overwrite the results file indicated with
{cmd:using}.


{title:Saved results}

{pstd}{cmd:tsrtest} saves the following in {cmd:r()}:

{synoptset 16 tabbed}{...}
{p2col 5 16 20 2: Scalars}{p_end}
{synopt:{cmd:r(repetitions)}} number of repetitions done if Monte Carlo
simulation was executed; if exact solution was done, reverts to missing{p_end}
{synopt:{cmd:r(simulated)}} {cmd:1} if results came from Monte Carlo
simulation, {cmd:0} if exact p-values were obtained from full randomization
solution{p_end}
{synopt:{cmd:r(missing)}} fraction of all combinations for which calculation of
test statistic gave a missing value{p_end}
{synopt:{cmd:r(twotail)}} fraction of all combinations for which absolute value
of test statistic minus null value was greater than or equal to that same
quantity for data distribution of original sample{p_end}
{synopt:{cmd:r(uppertail)}} fraction of all combinations for which value of
test statistic minus null value was greater than or equal to that for observed
data of original sample{p_end}
{synopt:{cmd:r(lowertail)}} fraction of all combinations for which value of
test statistic minus null value was less than or equal to that for observed
data of original sample{p_end}
{synopt:{cmd:r(obsvStat)}} value of test statistic computed on observed data
distribution of original sample{p_end}
{synopt:{cmd:r(combinations)}} number of combinations of possible assignments
of cases to two groups, without regard to order, i.e., comb(n1 + n2, n1). If
the exact solution was obtained, this is the actual number of data arrangements
on which the p-values are based; if a simulated solution was obtained, this is
the number that would have been required for an exact solution.{p_end} 
{p2colreset}{...}


{title:Examples}

{psee}{cmd:}{p_end}
{psee}{cmd:. sysuse auto}{p_end}
{psee}{cmd:. program define mean_difference, rclass}{p_end}
{psee}{cmd:.   sum price if foreign==1 & price<4500, meanonly}{p_end}
{psee}{cmd:.   local fgn=r(mean)}{p_end}
{psee}{cmd:.   sum price if foreign==0 & price<4500, meanonly}{p_end}
{psee}{cmd:.   local dom=r(mean)}{p_end}
{psee}{cmd:.   return scalar diff = `fgn'-`dom'}{p_end}
{psee}{cmd:. end}{p_end}
{psee}{cmd:. tsrtest foreign r(diff) if price<4500 :  mean_difference}{p_end}

{pstd}
If you are interested only in one-tailed p-levels, you can compute them this way (the two-tailed p-level will be wrong, but the calculation of the one-tailed p-levels will be much faster):

{psee}{cmd:. sysuse auto}{p_end}
{psee}{cmd:. tsrtest foreign r(mean) if price<4500 :  sum price if foreign==0 & price<4500}{p_end}


{title:Reference}

{phang}Gentleman, J. F. 1975. Algorithm AS 88: Generation of all nCr
combinations by simulating nested Fortran DO loops. {it:Applied Statistics}
24: 374-376.


{title:Authors}

{phang}Johannes Kaiser{p_end}
{phang}University of Bonn{p_end}
{phang}Bonn, Germany{p_end}
{phang}johannes.kaiser@uni-bonn.de{p_end}

{phang}Michael G. Lacy{p_end}
{phang}Colorado State University{p_end}
{phang}Fort Collins, Colorado{p_end}
{phang}michael.lacy@colostate.edu{p_end}


{title:Also see}

{psee}Article: {it:Stata Journal}, volume 9, number 1: {browse "http://www.stata-journal.com/article.html?article=st0158":st0158}

{psee}Online:  {helpb permute}
{p_end}
